apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: apps
spec:
  selector:
    matchLabels:
      app: postgres  # Match this label with the template.metadata.labels
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres  # Match this label with the selector
    spec:
      containers:
        - name: postgres
          image: postgres:12
          ports:
          - containerPort: 5432
          env:
          - name: POSTGRES_DB
            value: todos
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: password
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          volumeMounts:
          - name: mendix-pgdata
            mountPath: "/var/lib/postgresql/data"
              
      volumes:
        - name: mendix-pgdata
          hostPath:
            path: "/home/houssine/workspace/Todo-gitlab/data"
            type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: apps
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    app: postgres


























############################################################################################################





# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: devspace-postgres
# spec:
#   selector:
#     matchLabels:
#       app: devspace-postgres
#   serviceName: devspace-postgres
#   replicas: 1
#   updateStrategy:
#     type: RollingUpdate
#   template:
#     metadata:
#       labels:
#         app: devspace-postgres
#     spec:
#       terminationGracePeriodSeconds: 30
#       #serviceAccountName: devspace-default
#       containers:
#       - name: postgres
#         image: postgres:11
#         ports:
#         - containerPort: 5432
#         env:
#         - name: POSTGRES_PASSWORD
#           value: password #{{ .Values.database.password }}
#         - name: POSTGRES_USER
#           value: postgres #{{ .Values.database.user }}
#         - name: POSTGRES_DB
#           value: todos
#         - name: PGDATA
#           value: /var/lib/postgresql/data/pgdata
#         volumeMounts:
#         - name: data
#           mountPath: /var/lib/postgresql/data
#         livenessProbe:
#           exec:
#             command:
#             - sh
#             - -c
#             - exec pg_isready -U "postgres" -d "todos" -h 127.0.0.1 -p 5432
#           initialDelaySeconds: 30
#           periodSeconds: 10
#           timeoutSeconds: 5
#           successThreshold: 1
#           failureThreshold: 6
#         readinessProbe:
#           exec:
#             command:
#             - sh
#             - -c
#             - exec pg_isready -U "postgres" -d "todos" -h 127.0.0.1 -p 5432
#           initialDelaySeconds: 5
#           periodSeconds: 10
#           timeoutSeconds: 5
#           successThreshold: 6
#           failureThreshold: 1
#       volumes:
#         - name: data
#           hostPath:
#             path: /home/houssine/workspace/Todo-gitlab/data # directory location on host
#             type: Directory    
# #   volumeClaimTemplates:
# #   - metadata:
# #       name: data
# #     spec:
# #       accessModes: [ "ReadWriteOnce" ]
# #       {{- if .Values.database.storageClass }}
# #       storageClassName: {{ .Values.database.storageClass | quote }}
# #       {{- end }}
# #       resources:
# #         requests:
# #           storage: {{ .Values.database.size }}

# ---
# # PostgreSQL StatefulSet Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: devspace-postgres
#   labels:
#     app: devspace-postgres
# spec:
#   ports:
#   - port: 5432
#     protocol: TCP
#   selector:
#     app: devspace-postgres
# # ---
# # apiVersion: v1
# # kind: Service
# # metadata:
# #   name: devspace-postgres-headless
# #   labels:
# #     app: devspace-postgres
# # spec:
# #   clusterIP: None
# #   ports:
# #     - port: 5432
# #       protocol: TCP
# #   selector:
# #     app: devspace-postgres